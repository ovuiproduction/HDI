{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ONKAR\\\\OneDrive\\\\Desktop\\\\HDI\\\\hdi-react-app\\\\src\\\\Doctor\\\\ChatDoctor.jsx\",\n  _s = $RefreshSig$();\nimport react from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./Assests/css/ChatDoctor.css\";\n// hostDoctor\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChatDoctor() {\n  _s();\n  let [currentChater, setCurrentChater] = useState(\"\");\n  const [hostemail, setHostEmail] = useState(\"\");\n  const [dataDoctor, setDataDoctor] = useState([]);\n  const fetchDoctors = async () => {\n    try {\n      let responseDoctor = await fetch(\"http://localhost:5000/findDoctor\", {\n        method: \"post\",\n        body: JSON.stringify(),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (responseDoctor.ok) {\n        let data = await responseDoctor.json();\n        setDataDoctor(data.data);\n        setHostEmail(data.hostDoctor);\n        console.log(dataDoctor);\n      } else {\n        console.error(\"Error:\", responseDoctor.statusText);\n      }\n    } catch (error) {\n      console.error(\"An error occurred:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchDoctors();\n  }, []);\n  const startChat = async selectemail => {\n    setCurrentChater(selectemail);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"link\", {\n      href: \"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\",\n      rel: \"stylesheet\",\n      integrity: \"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\",\n      crossOrigin: \"anonymous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"chatDoctorNav\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/homeDoctor\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"HDI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainchatContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leftSideBar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"doctorListBlock\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: dataDoctor.filter(doctor => !doctor.email.startsWith(hostemail)).map(doctor => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => startChat(doctor.email),\n              className: \"doctors\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"https://cdn-icons-png.flaticon.com/512/194/194915.png\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: doctor.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"msgBlock\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"msgnav\",\n          children: currentChater\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mainchat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sendmsgBlock\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendMsg,\n            type: \"button\",\n            class: \"btn btn-success\",\n            children: \"Success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n      src: \"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\",\n      integrity: \"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\",\n      crossOrigin: \"anonymous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ChatDoctor, \"5+V7QhRdWAvPztHc9xUH8X0mR4U=\");\n_c = ChatDoctor;\nvar _c;\n$RefreshReg$(_c, \"ChatDoctor\");","map":{"version":3,"names":["react","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatDoctor","_s","currentChater","setCurrentChater","hostemail","setHostEmail","dataDoctor","setDataDoctor","fetchDoctors","responseDoctor","fetch","method","body","JSON","stringify","headers","ok","data","json","hostDoctor","console","log","error","statusText","startChat","selectemail","children","href","rel","integrity","crossOrigin","fileName","_jsxFileName","lineNumber","columnNumber","className","filter","doctor","email","startsWith","map","onClick","src","alt","name","type","sendMsg","class","_c","$RefreshReg$"],"sources":["C:/Users/ONKAR/OneDrive/Desktop/HDI/hdi-react-app/src/Doctor/ChatDoctor.jsx"],"sourcesContent":["import react from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport \"./Assests/css/ChatDoctor.css\";\r\n// hostDoctor\r\nexport default function ChatDoctor() {\r\n  let [currentChater, setCurrentChater] = useState(\"\");\r\n  const [hostemail, setHostEmail] = useState(\"\");\r\n  const [dataDoctor, setDataDoctor] = useState([]);\r\n  const fetchDoctors = async () => {\r\n    try {\r\n      let responseDoctor = await fetch(\"http://localhost:5000/findDoctor\", {\r\n        method: \"post\",\r\n        body: JSON.stringify(),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      if (responseDoctor.ok) {\r\n        let data = await responseDoctor.json();\r\n        setDataDoctor(data.data);\r\n        setHostEmail(data.hostDoctor);\r\n        console.log(dataDoctor);\r\n      } else {\r\n        console.error(\"Error:\", responseDoctor.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"An error occurred:\", error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchDoctors();\r\n  }, []);\r\n\r\n  const startChat = async (selectemail) => {\r\n    setCurrentChater(selectemail);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <link\r\n        href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n        rel=\"stylesheet\"\r\n        integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\r\n        crossOrigin=\"anonymous\"\r\n      ></link>\r\n      <nav className=\"chatDoctorNav\">\r\n        <a href=\"/homeDoctor\">\r\n          <h2>HDI</h2>\r\n        </a>\r\n      </nav>\r\n      <div className=\"mainchatContainer\">\r\n        <div className=\"leftSideBar\"></div>\r\n        <div className=\"doctorListBlock\">\r\n          <ul>\r\n            {dataDoctor\r\n              .filter((doctor) => !doctor.email.startsWith(hostemail))\r\n              .map((doctor) => (\r\n                <li>\r\n                  <div\r\n                    onClick={() => startChat(doctor.email)}\r\n                    className=\"doctors\"\r\n                  >\r\n                    <img\r\n                      src=\"https://cdn-icons-png.flaticon.com/512/194/194915.png\"\r\n                      alt=\"\"\r\n                    />\r\n                    <p>{doctor.name}</p>\r\n                  </div>\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </div>\r\n        <div className=\"msgBlock\">\r\n          <div className=\"msgnav\">{currentChater}</div>\r\n          <div className=\"mainchat\"></div>\r\n          <div className=\"sendmsgBlock\">\r\n            <input type=\"text\" />\r\n            <button onClick={sendMsg} type=\"button\" class=\"btn btn-success\">\r\n              Success\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <script\r\n        src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"\r\n        integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\"\r\n        crossOrigin=\"anonymous\"\r\n      ></script>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}