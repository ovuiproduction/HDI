{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ONKAR\\\\OneDrive\\\\Desktop\\\\HDI\\\\hdi-react-app\\\\src\\\\Doctor\\\\ChatDoctor.jsx\",\n  _s = $RefreshSig$();\nimport react from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./Assests/css/ChatDoctor.css\";\n// hostDoctor\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChatDoctor() {\n  _s();\n  const [hostemail, setHostEmail] = useState(\"\");\n  const [dataDoctor, setDataDoctor] = useState([]);\n  const fetchDoctors = async () => {\n    try {\n      let responseDoctor = await fetch(\"http://localhost:5000/findDoctor\", {\n        method: \"post\",\n        body: JSON.stringify(),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (responseDoctor.ok) {\n        let data = await responseDoctor.json();\n        setDataDoctor(data.data);\n        setHostEmail(data.hostDoctor);\n      } else {\n        console.error(\"Error:\", responseDoctor.statusText);\n      }\n    } catch (error) {\n      console.error(\"An error occurred:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchDoctors();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"chatDoctorNav\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/homeDoctor\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"HDI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainchatContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leftSideBar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"doctorListBlock\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: dataDoctor.filter(doctor => !doctor.email.startsWith(hostemail)).map(doctor => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"doctors\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"https://cdn-icons-png.flaticon.com/512/194/194915.png\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: doctor.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"msgBlock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(ChatDoctor, \"FoIV11rTqk/ElqdszmpMc2ugxRI=\");\n_c = ChatDoctor;\nvar _c;\n$RefreshReg$(_c, \"ChatDoctor\");","map":{"version":3,"names":["react","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatDoctor","_s","hostemail","setHostEmail","dataDoctor","setDataDoctor","fetchDoctors","responseDoctor","fetch","method","body","JSON","stringify","headers","ok","data","json","hostDoctor","console","error","statusText","children","className","href","fileName","_jsxFileName","lineNumber","columnNumber","filter","doctor","email","startsWith","map","src","alt","name","_c","$RefreshReg$"],"sources":["C:/Users/ONKAR/OneDrive/Desktop/HDI/hdi-react-app/src/Doctor/ChatDoctor.jsx"],"sourcesContent":["import react  from \"react\";\r\nimport { useState ,useEffect} from \"react\";\r\nimport \"./Assests/css/ChatDoctor.css\";\r\n// hostDoctor\r\nexport default function ChatDoctor(){\r\n    const [hostemail,setHostEmail] = useState(\"\");\r\n    const [dataDoctor,setDataDoctor] = useState([]);\r\n    const fetchDoctors = async()=>{\r\n        try {\r\n            let responseDoctor = await fetch(\"http://localhost:5000/findDoctor\", {\r\n              method: \"post\",\r\n              body: JSON.stringify(),\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n            });\r\n            if (responseDoctor.ok) {\r\n              let data = await responseDoctor.json();\r\n              setDataDoctor(data.data);\r\n              setHostEmail(data.hostDoctor);\r\n            } else {\r\n              console.error(\"Error:\", responseDoctor.statusText);\r\n            }\r\n          } catch (error) {\r\n            console.error(\"An error occurred:\", error);\r\n          }\r\n    }\r\n    useEffect(()=>{\r\n        fetchDoctors();\r\n    },[])\r\n    return(\r\n        <>\r\n        <nav className=\"chatDoctorNav\">\r\n        <a href=\"/homeDoctor\"><h1>HDI</h1></a>\r\n        </nav>\r\n        <div className=\"mainchatContainer\">\r\n            <div className=\"leftSideBar\"></div>\r\n            <div className=\"doctorListBlock\">\r\n                <ul>\r\n                {dataDoctor.filter(doctor => !doctor.email.startsWith(hostemail)).map(doctor => (\r\n                    <li>\r\n                        <div className=\"doctors\">\r\n                            <img src=\"https://cdn-icons-png.flaticon.com/512/194/194915.png\" alt=\"\" />\r\n                            <p>{doctor.name}</p>\r\n                        </div>\r\n                    </li>\r\n                ))}\r\n                    {/* <li>\r\n                        <div className=\"doctors\">\r\n                        <img src=\"https://cdn-icons-png.flaticon.com/512/194/194915.png\" alt=\"\" />\r\n                            <p>Tony</p>\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        <div className=\"doctors\">\r\n                        <img src=\"https://cdn-icons-png.flaticon.com/512/194/194915.png\" alt=\"\" />\r\n                            <p>Tony</p>\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        <div className=\"doctors\">\r\n                        <img src=\"https://cdn-icons-png.flaticon.com/512/194/194915.png\" alt=\"\" />\r\n                            <p>Tony</p>\r\n                        </div>\r\n                    </li> */}\r\n                </ul>\r\n            </div>\r\n            <div className=\"msgBlock\"></div>\r\n        </div>\r\n        </>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}